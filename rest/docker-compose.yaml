services:
  db:
    image: postgres
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      PG_DATA: /var/lib/postgresql/data/pgdata
    networks:
      - flask_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pg_data:/var/lib/postgresql/data
    secrets:
      - postgres_password

  web:
    image: python-docker:0.0.3
    ports:
      - "5001:5000"
    environment:
      - POSTGRES_PASSWORD=mysecretpassword
      - PSQL_HOST=db
      - PSQL_DB=postgres
      - PSQL_USER=postgres
    networks:
      - flask_network
    depends_on:
      - db
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import requests; import sys; r = requests.get('http://localhost:5000/'); sys.exit(0 if r.status_code == 200 else 1)\""]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    secrets:
      - postgres_password

secrets:
  postgres_password:
    external: true

volumes:
  pg_data:

networks:
  flask_network: